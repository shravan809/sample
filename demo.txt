DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new
$ git init
Initialized empty Git repository in C:/Users/DELL/Desktop/git_hup_new/.git/

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git touch
git: 'touch' is not a git command. See 'git --help'.

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ touch demo.txt

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git add .

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git commit -m 'onefile added'
[master (root-commit) 57e4de2] onefile added
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 demo.txt

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git commit --amend
hint: Waiting for your editor to close the file... error: cannot spawn vscode: No such file or directory
error: unable to start editor 'vscode'
Please supply the message using either -m or -F option.

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git commit --ameend
error: unknown option `ameend'
usage: git commit [-a | --interactive | --patch] [-s] [-v] [-u<mode>] [--amend]
                  [--dry-run] [(-c | -C | --squash) <commit> | --fixup [(amend|reword):]<commit>)]
                  [-F <file> | -m <msg>] [--reset-author] [--allow-empty]
                  [--allow-empty-message] [--no-verify] [-e] [--author=<author>]
                  [--date=<date>] [--cleanup=<mode>] [--[no-]status]
                  [-i | -o] [--pathspec-from-file=<file> [--pathspec-file-nul]]
                  [(--trailer <token>[(=|:)<value>])...] [-S[<keyid>]]
                  [--] [<pathspec>...]

    -q, --quiet           suppress summary after successful commit
    -v, --verbose         show diff in commit message template

Commit message options
    -F, --file <file>     read message from file
    --author <author>     override author for commit
    --date <date>         override date for commit
    -m, --message <message>
                          commit message
    -c, --reedit-message <commit>
                          reuse and edit message from specified commit
    -C, --reuse-message <commit>
                          reuse message from specified commit
    --fixup [(amend|reword):]commit
                          use autosquash formatted message to fixup or amend/reword specified commit
    --squash <commit>     use autosquash formatted message to squash specified commit
    --reset-author        the commit is authored by me now (used with -C/-c/--amend)
    --trailer <trailer>   add custom trailer(s)
    -s, --signoff         add a Signed-off-by trailer
    -t, --template <file>
                          use specified template file
    -e, --edit            force edit of commit
    --cleanup <mode>      how to strip spaces and #comments from message
    --status              include status in commit message template
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit

Commit contents options
    -a, --all             commit all changed files
    -i, --include         add specified files to index for commit
    --interactive         interactively add files
    -p, --patch           interactively add changes
    -o, --only            commit only specified files
    -n, --no-verify       bypass pre-commit and commit-msg hooks
    --dry-run             show what would be committed
    --short               show status concisely
    --branch              show branch information
    --ahead-behind        compute full ahead/behind values
    --porcelain           machine-readable output
    --long                show status in long format (default)
    -z, --null            terminate entries with NUL
    --amend               amend previous commit
    --no-post-rewrite     bypass post-rewrite hook
    -u, --untracked-files[=<mode>]
                          show untracked files, optional modes: all, normal, no. (Default: all)
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character


DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git commit --amend
hint: Waiting for your editor to close the file... error: cannot spawn vscode: No such file or directory
error: unable to start editor 'vscode'
Please supply the message using either -m or -F option.

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git commit -m --amend
On branch master
nothing to commit, working tree clean

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git commit -f --amend
error: unknown switch `f'
usage: git commit [-a | --interactive | --patch] [-s] [-v] [-u<mode>] [--amend]
                  [--dry-run] [(-c | -C | --squash) <commit> | --fixup [(amend|reword):]<commit>)]
                  [-F <file> | -m <msg>] [--reset-author] [--allow-empty]
                  [--allow-empty-message] [--no-verify] [-e] [--author=<author>]
                  [--date=<date>] [--cleanup=<mode>] [--[no-]status]
                  [-i | -o] [--pathspec-from-file=<file> [--pathspec-file-nul]]
                  [(--trailer <token>[(=|:)<value>])...] [-S[<keyid>]]
                  [--] [<pathspec>...]

    -q, --quiet           suppress summary after successful commit
    -v, --verbose         show diff in commit message template

Commit message options
    -F, --file <file>     read message from file
    --author <author>     override author for commit
    --date <date>         override date for commit
    -m, --message <message>
                          commit message
    -c, --reedit-message <commit>
                          reuse and edit message from specified commit
    -C, --reuse-message <commit>
                          reuse message from specified commit
    --fixup [(amend|reword):]commit
                          use autosquash formatted message to fixup or amend/reword specified commit
    --squash <commit>     use autosquash formatted message to squash specified commit
    --reset-author        the commit is authored by me now (used with -C/-c/--amend)
    --trailer <trailer>   add custom trailer(s)
    -s, --signoff         add a Signed-off-by trailer
    -t, --template <file>
                          use specified template file
    -e, --edit            force edit of commit
    --cleanup <mode>      how to strip spaces and #comments from message
    --status              include status in commit message template
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit

Commit contents options
    -a, --all             commit all changed files
    -i, --include         add specified files to index for commit
    --interactive         interactively add files
    -p, --patch           interactively add changes
    -o, --only            commit only specified files
    -n, --no-verify       bypass pre-commit and commit-msg hooks
    --dry-run             show what would be committed
    --short               show status concisely
    --branch              show branch information
    --ahead-behind        compute full ahead/behind values
    --porcelain           machine-readable output
    --long                show status in long format (default)
    -z, --null            terminate entries with NUL
    --amend               amend previous commit
    --no-post-rewrite     bypass post-rewrite hook
    -u, --untracked-files[=<mode>]
                          show untracked files, optional modes: all, normal, no. (Default: all)
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character


DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git commit --amend
hint: Waiting for your editor to close the file... error: cannot spawn vscode: No such file or directory
error: unable to start editor 'vscode'
Please supply the message using either -m or -F option.

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git commit -f -a
error: unknown switch `f'
usage: git commit [-a | --interactive | --patch] [-s] [-v] [-u<mode>] [--amend]
                  [--dry-run] [(-c | -C | --squash) <commit> | --fixup [(amend|reword):]<commit>)]
                  [-F <file> | -m <msg>] [--reset-author] [--allow-empty]
                  [--allow-empty-message] [--no-verify] [-e] [--author=<author>]
                  [--date=<date>] [--cleanup=<mode>] [--[no-]status]
                  [-i | -o] [--pathspec-from-file=<file> [--pathspec-file-nul]]
                  [(--trailer <token>[(=|:)<value>])...] [-S[<keyid>]]
                  [--] [<pathspec>...]

    -q, --quiet           suppress summary after successful commit
    -v, --verbose         show diff in commit message template

Commit message options
    -F, --file <file>     read message from file
    --author <author>     override author for commit
    --date <date>         override date for commit
    -m, --message <message>
                          commit message
    -c, --reedit-message <commit>
                          reuse and edit message from specified commit
    -C, --reuse-message <commit>
                          reuse message from specified commit
    --fixup [(amend|reword):]commit
                          use autosquash formatted message to fixup or amend/reword specified commit
    --squash <commit>     use autosquash formatted message to squash specified commit
    --reset-author        the commit is authored by me now (used with -C/-c/--amend)
    --trailer <trailer>   add custom trailer(s)
    -s, --signoff         add a Signed-off-by trailer
    -t, --template <file>
                          use specified template file
    -e, --edit            force edit of commit
    --cleanup <mode>      how to strip spaces and #comments from message
    --status              include status in commit message template
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit

Commit contents options
    -a, --all             commit all changed files
    -i, --include         add specified files to index for commit
    --interactive         interactively add files
    -p, --patch           interactively add changes
    -o, --only            commit only specified files
    -n, --no-verify       bypass pre-commit and commit-msg hooks
    --dry-run             show what would be committed
    --short               show status concisely
    --branch              show branch information
    --ahead-behind        compute full ahead/behind values
    --porcelain           machine-readable output
    --long                show status in long format (default)
    -z, --null            terminate entries with NUL
    --amend               amend previous commit
    --no-post-rewrite     bypass post-rewrite hook
    -u, --untracked-files[=<mode>]
                          show untracked files, optional modes: all, normal, no. (Default: all)
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character


DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git remote

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git remote -v

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git remote add origin https://github.com/shravan809/sample.git

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git remote
origin

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git remote -v
origin  https://github.com/shravan809/sample.git (fetch)
origin  https://github.com/shravan809/sample.git (push)

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git status
On branch master
nothing to commit, working tree clean

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git branch
* master

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git branch aja

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git branch
  aja
* master

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git checkout aja
Switched to branch 'aja'

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (aja)
$ git status
On branch aja
nothing to commit, working tree clean

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (aja)
$ git add .

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (aja)
$ git commit -m 'file added'
On branch aja
nothing to commit, working tree clean

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (aja)
$ git push origin
fatal: The current branch aja has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin aja

To have this happen automatically for branches without a tracking
upstream, see 'push.autoSetupRemote' in 'git help config'.


DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (aja)
$ git push origin aja
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Writing objects: 100% (3/3), 215 bytes | 107.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote: Create a pull request for 'aja' on GitHub by visiting:
remote:      https://github.com/shravan809/sample/pull/new/aja
remote:
To https://github.com/shravan809/sample.git
 * [new branch]      aja -> aja

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (aja)
$ ls
demo.txt

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (aja)
$ cat demo.txt

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (aja)
$ vi demo.txt

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (aja)
$ cat demo.txt

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (aja)
$ vi demo.txt

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (aja)
$ cat demo.txt
Hi I Love U:qi

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (aja)
$ git add .
warning: in the working copy of 'demo.txt', LF will be replaced by CRLF the next time Git touches it

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (aja)
$ nano demo.txt

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (aja)
$ cat demo.txt
Hi I Love U:qi
Hi I Miss U

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (aja)
$ nano demo.txt

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (aja)
$ touch demo.py

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (aja)
$ add .
bash: add: command not found

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (aja)
$ git add .
warning: in the working copy of 'demo.txt', LF will be replaced by CRLF the next time Git touches it

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (aja)
$ git commit -m 'file added'
[aja 83a0ec4] file added
 2 files changed, 3 insertions(+)
 create mode 100644 demo.py

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (aja)
$ git branch ojas

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (aja)
$ git checkout ojas
Switched to branch 'ojas'

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (ojas)
$ git status
On branch ojas
nothing to commit, working tree clean

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (ojas)
$ git push origin ojas
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 297 bytes | 148.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote: Create a pull request for 'ojas' on GitHub by visiting:
remote:      https://github.com/shravan809/sample/pull/new/ojas
remote:
To https://github.com/shravan809/sample.git
 * [new branch]      ojas -> ojas

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (ojas)
$ git pull
remote: Enumerating objects: 3, done.
remote: Counting objects: 100% (3/3), done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 867 bytes | 57.00 KiB/s, done.
From https://github.com/shravan809/sample
 * [new branch]      main       -> origin/main
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=origin/<branch> ojas


DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (ojas)
$ git log
commit 83a0ec4c703f57c16960749047910c31a5fba3af (HEAD -> ojas, origin/ojas, aja)
Author: shravan809 <dasari.shravan1996@gmail.com>
Date:   Mon Apr 8 15:58:04 2024 +0530

    file added

commit 57e4de2b89c7228e91309a7681e4d743297770ed (origin/aja, master)
Author: shravan809 <dasari.shravan1996@gmail.com>
Date:   Mon Apr 8 15:34:58 2024 +0530

    onefile added

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (ojas)
$ git branch
  aja
  master
* ojas

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (ojas)
$ git checkout master
Switched to branch 'master'

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ touch demo.html

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ vi demo

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        demo
        demo.html

nothing added to commit but untracked files present (use "git add" to track)

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git add .
warning: in the working copy of 'demo', LF will be replaced by CRLF the next time Git touches it

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git commit -m 'html file added'
[master a13b749] html file added
 2 files changed, 1 insertion(+)
 create mode 100644 demo
 create mode 100644 demo.html

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git commit --adend
error: unknown option `adend'
usage: git commit [-a | --interactive | --patch] [-s] [-v] [-u<mode>] [--amend]
                  [--dry-run] [(-c | -C | --squash) <commit> | --fixup [(amend|reword):]<commit>)]
                  [-F <file> | -m <msg>] [--reset-author] [--allow-empty]
                  [--allow-empty-message] [--no-verify] [-e] [--author=<author>]
                  [--date=<date>] [--cleanup=<mode>] [--[no-]status]
                  [-i | -o] [--pathspec-from-file=<file> [--pathspec-file-nul]]
                  [(--trailer <token>[(=|:)<value>])...] [-S[<keyid>]]
                  [--] [<pathspec>...]

    -q, --quiet           suppress summary after successful commit
    -v, --verbose         show diff in commit message template

Commit message options
    -F, --file <file>     read message from file
    --author <author>     override author for commit
    --date <date>         override date for commit
    -m, --message <message>
                          commit message
    -c, --reedit-message <commit>
                          reuse and edit message from specified commit
    -C, --reuse-message <commit>
                          reuse message from specified commit
    --fixup [(amend|reword):]commit
                          use autosquash formatted message to fixup or amend/reword specified commit
    --squash <commit>     use autosquash formatted message to squash specified commit
    --reset-author        the commit is authored by me now (used with -C/-c/--amend)
    --trailer <trailer>   add custom trailer(s)
    -s, --signoff         add a Signed-off-by trailer
    -t, --template <file>
                          use specified template file
    -e, --edit            force edit of commit
    --cleanup <mode>      how to strip spaces and #comments from message
    --status              include status in commit message template
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit

Commit contents options
    -a, --all             commit all changed files
    -i, --include         add specified files to index for commit
    --interactive         interactively add files
    -p, --patch           interactively add changes
    -o, --only            commit only specified files
    -n, --no-verify       bypass pre-commit and commit-msg hooks
    --dry-run             show what would be committed
    --short               show status concisely
    --branch              show branch information
    --ahead-behind        compute full ahead/behind values
    --porcelain           machine-readable output
    --long                show status in long format (default)
    -z, --null            terminate entries with NUL
    --amend               amend previous commit
    --no-post-rewrite     bypass post-rewrite hook
    -u, --untracked-files[=<mode>]
                          show untracked files, optional modes: all, normal, no. (Default: all)
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character


DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git commit --amend
hint: Waiting for your editor to close the file... error: cannot spawn vscode: No such file or directory
error: unable to start editor 'vscode'
Please supply the message using either -m or -F option.

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git push
fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin master

To have this happen automatically for branches without a tracking
upstream, see 'push.autoSetupRemote' in 'git help config'.


DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git push main
fatal: 'main' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git push origin master
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 304 bytes | 101.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote: Create a pull request for 'master' on GitHub by visiting:
remote:      https://github.com/shravan809/sample/pull/new/master
remote:
To https://github.com/shravan809/sample.git
 * [new branch]      master -> master

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git log
commit a13b74993e2a05dd228778c875d0519f09bfa8fa (HEAD -> master, origin/master)
Author: shravan809 <dasari.shravan1996@gmail.com>
Date:   Mon Apr 8 16:03:43 2024 +0530

    html file added

commit 57e4de2b89c7228e91309a7681e4d743297770ed (origin/aja)
Author: shravan809 <dasari.shravan1996@gmail.com>
Date:   Mon Apr 8 15:34:58 2024 +0530

    onefile added

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git branch
  aja
* master
  ojas

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git cheakout main
git: 'cheakout' is not a git command. See 'git --help'.

The most similar command is
        checkout

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (master)
$ git checkout main
Switched to a new branch 'main'
branch 'main' set up to track 'origin/main'.

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git branch
  aja
* main
  master
  ojas

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git add .

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git commit -m 'file added'
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git push main
fatal: 'main' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git push
Everything up-to-date

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ touch text.js

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ vi text.js

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git add .
warning: in the working copy of 'text.js', LF will be replaced by CRLF the next time Git touches it

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git commit -m 'js file added'
[main c94e96f] js file added
 1 file changed, 1 insertion(+)
 create mode 100644 text.js

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git push
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 290 bytes | 290.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/shravan809/sample.git
   02b8ddc..c94e96f  main -> main

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git log
commit c94e96f00525e0a8843065b3ff74ed5a0eab92ac (HEAD -> main, origin/main)
Author: shravan809 <dasari.shravan1996@gmail.com>
Date:   Mon Apr 8 16:49:41 2024 +0530

    js file added

commit 02b8ddc5acbb079f3efa8a7ddf41be57ef8a53f5
Author: Shravan Kumar <99875005+shravan809@users.noreply.github.com>
Date:   Mon Apr 8 15:41:52 2024 +0530

    Initial commit

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git log --grep
fatal: Option '--grep' requires a value

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git log --grep 'file'
commit c94e96f00525e0a8843065b3ff74ed5a0eab92ac (HEAD -> main, origin/main)
Author: shravan809 <dasari.shravan1996@gmail.com>
Date:   Mon Apr 8 16:49:41 2024 +0530

    js file added

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git log --grep 'added'
commit c94e96f00525e0a8843065b3ff74ed5a0eab92ac (HEAD -> main, origin/main)
Author: shravan809 <dasari.shravan1996@gmail.com>
Date:   Mon Apr 8 16:49:41 2024 +0530

    js file added

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git log --grep 'txt'

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git log --grep 'added'
commit c94e96f00525e0a8843065b3ff74ed5a0eab92ac (HEAD -> main, origin/main)
Author: shravan809 <dasari.shravan1996@gmail.com>
Date:   Mon Apr 8 16:49:41 2024 +0530

    js file added

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git log --online
fatal: unrecognized argument: --online

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git log
commit c94e96f00525e0a8843065b3ff74ed5a0eab92ac (HEAD -> main, origin/main)
Author: shravan809 <dasari.shravan1996@gmail.com>
Date:   Mon Apr 8 16:49:41 2024 +0530

    js file added

commit 02b8ddc5acbb079f3efa8a7ddf41be57ef8a53f5
Author: Shravan Kumar <99875005+shravan809@users.noreply.github.com>
Date:   Mon Apr 8 15:41:52 2024 +0530

    Initial commit

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git stash
No local changes to save

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git stash list


DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git stash pop
No stash entries found.

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git stash drop
No stash entries found.

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ vi demo.txt

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git stash list

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git stash
No local changes to save

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git add .
warning: in the working copy of 'demo.txt', LF will be replaced by CRLF the next time Git touches it

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git stash list

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git stash
Saved working directory and index state WIP on main: c94e96f js file added

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git stash list
stash@{0}: WIP on main: c94e96f js file added

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git stash pop
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   demo.txt

Dropped refs/stash@{0} (cd262c429c2ca291fd5d033be66f0e59bb44fd42)

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git push
Everything up-to-date

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git stash drop
No stash entries found.

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git stash list

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git stash pop
No stash entries found.

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git stash
Saved working directory and index state WIP on main: c94e96f js file added

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git stash pop
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   demo.txt

Dropped refs/stash@{0} (bf7520457c96290b36911eed4d7dc2351d3eca47)

DELL@DESKTOP-GPDVM0F MINGW64 ~/Desktop/git_hup_new (main)
$ git stash drop
No stash entries found.

